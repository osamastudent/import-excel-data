******** blade file*******
        <form class="needs-validation" novalidate action="{{ route('admin.huni.import.store') }}" method="post" enctype="multipart/form-data">
                        @csrf
                            <div class="row gx-2">
                                <!--<div class="form-group col-md-3">-->
                                <!--    <label for="batch">{{ __('field_batch') }} <span>*</span></label>-->
                                <!--    <select class="form-control batch" name="batch" id="batch" required>-->
                                <!--        <option value="">{{ __('select') }}</option>-->
                                <!--        @foreach( $batches as $batch )-->
                                <!--        <option value="{{ $batch->id }}" @if(old('batch') == $batch->id) selected @endif>{{ $batch->title }}</option>-->
                                <!--        @endforeach-->
                                <!--    </select>-->

                                <!--    <div class="invalid-feedback">-->
                                <!--      {{ __('required_field') }} {{ __('field_batch') }}-->
                                <!--    </div>-->
                                <!--</div>-->

                                <!--<div class="form-group col-md-3">-->
                                <!--    <label for="program">{{ __('field_program') }} <span>*</span></label>-->
                                <!--    <select class="form-control program" name="program" id="program" required>-->
                                <!--      <option value="">{{ __('select') }}</option>-->
                                <!--    </select>-->

                                <!--  <div class="invalid-feedback">-->
                                <!--    {{ __('required_field') }} {{ __('field_program') }}-->
                                <!--  </div>-->
                                <!--</div>-->

                                <!--<div class="form-group col-md-3">-->
                                <!--    <label for="session">{{ __('field_session') }} <span>*</span></label>-->
                                <!--    <select class="form-control session" name="session" id="session" required>-->
                                <!--      <option value="">{{ __('select') }}</option>-->
                                <!--    </select>-->

                                <!--    <div class="invalid-feedback">-->
                                <!--      {{ __('required_field') }} {{ __('field_session') }}-->
                                <!--    </div>-->
                                <!--</div>-->

                                <div class="form-group col-md-3">
                                    <label for="semester">{{ __('field_semester') }} affan <span>*</span></label>
                                    <select class="form-control semester select2" name="semester[]" id="semester" multiple required>
                                      <option value="">{{ __('select') }}</option>
                                       @foreach( $semesters as $data )-->
                                        <option value="{{ $data->id }}" >{{ $data->title }}</option>
                                        @endforeach--
                                    </select>

                                    <div class="invalid-feedback">
                                      {{ __('required_field') }} {{ __('field_semester') }}
                                    </div>
                                </div>

                                <!--<div class="form-group col-md-3">-->
                                <!--    <label for="section">{{ __('field_section') }} <span>*</span></label>-->
                                <!--    <select class="form-control section" name="section" id="section" required>-->
                                <!--      <option value="">{{ __('select') }}</option>-->
                                <!--    </select>-->

                                <!--    <div class="invalid-feedback">-->
                                <!--      {{ __('required_field') }} {{ __('field_section') }}-->
                                <!--    </div>-->
                                <!--</div>-->
                                
                                
                                <!--<div class="form-group col-md-6">-->
                                <!--    <label for="year" class="form-label">{{ __('field_year') }} <span>*</span></label>-->
                                <!--    <input type="text" class="form-control" name="year" id="year" value="{{ old('year') }}" required>-->
    
                                <!--    <div class="invalid-feedback">-->
                                <!--      {{ __('required_field') }} {{ __('field_year') }}-->
                                <!--    </div>-->
                                <!--</div>-->
                                
                                <!--<br><br>-->
                                
                                
                                <!--<div class="form-group col-md-6">-->
                                <!--    <label for="title" class="form-label">{{ __('field_title') }} <span>*</span></label>-->
                                <!--    <input type="text" class="form-control" name="semester" id="semester" value="{{ old('semester') }}" required>-->
                                    
                                <!--    <div class="invalid-feedback">-->
                                <!--      {{ __('required_field') }} {{ __('field_title') }}-->
                                <!--    </div>-->
                                <!--</div>-->
                            
                            
                                <div class="form-group col-md-3">
                                    <label for="import">{{ __('File xlsx') }} <span>*</span></label>
                                    <input type="file" class="form-control" name="import" id="import" value="{{ old('import') }}" accept=".xlsx" required>

                                    <div class="invalid-feedback">
                                      {{ __('required_field') }} {{ __('File xlsx') }}
                                    </div>
                                </div>

                                <div class="form-group col-md-3">
                                    <button type="submit" class="btn btn-info btn-filter"><i class="fas fa-upload"></i> {{ __('btn_upload') }}</button>
                                </div>
                            </div>
                        </form>

************************************** route *******************************
Route::post('admission/huni-import-store', 'ApplicationController@importStore')->name('huni.import.store');

************************************** controller  *******************************
   public function importStore(Request $request)
{
    // Validate the input fields
    $request->validate([
        'semester' => 'required',  // Expecting an array of semesters
        'import' => 'required|file|mimes:xlsx',
    ]);

    // Store the selected semesters as an array
    $data['semester'] = $request->semester;

    // Pass the semester array to the HuniImport class
    Excel::import(new HuniImport($data), $request->file('import'));

    Toastr::success(__('msg_updated_successfully'), __('msg_success'));
    return redirect('admin/admision/application');
}


************************************** import file  *******************************
<?php

namespace App\Imports;

use Auth;
use App\Models\Student;
use App\Models\StudentEnroll;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Validator;
use Maatwebsite\Excel\Concerns\ToCollection;
use Maatwebsite\Excel\Concerns\WithHeadingRow;
use Maatwebsite\Excel\Concerns\WithStartRow;
use Illuminate\Validation\Rule;
use PhpOffice\PhpSpreadsheet\Shared\Date;

class HuniImport implements ToCollection, WithHeadingRow
{
    protected $data;

    /**
     * Constructor to pass additional data to the class.
     *
     * @param array $data
     */
    public function __construct($data)
    {
        $this->data = $data;
    }

    /**
     * Specify the row from where the import should start.
     *
     * @return int
     */
    

    /**
     * Handle the collection of rows.
     *
     * @param Collection $rows
     */
    public function collection(Collection $rows)
{
    foreach ($rows as $row) {
        // Skip empty rows
        if ($row->filter()->isEmpty()) {
            continue;
        }

        // Check if the student with the same student_id already exists
        $existingStudent = Student::where('student_id', $row['student_id'])->first();

        // Validation rules for student uniqueness
        $rules = [
            'student_id' => [
                Rule::unique('students', 'student_id')->ignore($existingStudent ? $existingStudent->id : null),
            ],
        ];

        // Validate only if the student doesn't exist
        if (!$existingStudent) {
            Validator::make($row->toArray(), $rules)->validate();
        }

        // Create or update the student record
        $student = Student::updateOrCreate(
            ['student_id' => $row['student_id']],
            [
                'student_id' => $row['student_id'],
                'applicant_number' => $row['applicant_number'] ?? null,
                'submission_date' => isset($row['submission_date']) ? Date::excelToDateTimeObject((int)$row['submission_date'])->format('Y-m-d') : null,
                'program_fims' => $row['program_fims'] ?? null,
                'alien_reg' => $row['alien_reg'] ?? null,
                'last_name' => $row['last_name'] ?? null,
                'first_name' => $row['first_name'] ?? null,
                'dob' => isset($row['dob']) ? (is_numeric($row['dob']) ? Date::excelToDateTimeObject((int)$row['dob'])->format('Y-m-d') : null) : null,
                'nationality' => $row['nationality'] ?? null,
                'country_birth' => $row['country_birth'] ?? null,
                'passport_no' => $row['passport_no'] ?? null,
                'gender' => $row['gender'] ?? null,
                'contact_number' => $row['contact_number'] ?? null,
                'email' => $row['email'] ?? null,
                'father_name' => $row['father_name'] ?? null,
                'father_contact_informtion' => $row['father_contact_informtion'] ?? null,
                'father_email' => $row['father_email'] ?? null,
                'mother_contact_information' => $row['mother_contact_information'] ?? null,
                'mother_email' => $row['mother_email'] ?? null,
                'high_school' => $row['high_school'] ?? '',
                'school_graduation_year' => $row['school_graduation_year'] ?? null,
                'collage_name' => $row['collage_name'] ?? null,
                'admission_type' => $row['admission_type'] ?? null,
                'admissions_route' => $row['admissions_route'] ?? null,
                'recommending_organization' => $row['recommending_organization'] ?? null,
                'last_school_attended' => $row['last_school_attended'] ?? null,
                'dormitory_resistence' => $row['dormitory_resistence'] ?? null,
                'degree_program_interest' => $row['degree_program_interest'] ?? null,
                'enviroment' => 1 ?? null,
                'created_by' => Auth::id(),
            ]
        );

        // Loop through each semester and create separate records in StudentEnroll table
        foreach ($this->data['semester'] as $semesterId) {
            StudentEnroll::updateOrCreate(
                [
                    'student_id' => $student->id,
                    'semester_id' => $semesterId,  // Add semester ID dynamically
                ],
                ['created_by' => Auth::id()]
            );
        }
    }
}

}



